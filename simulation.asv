% offset = 0.6; % [-pi:0.2:pi];
N_realizations = 100;
N = 100000;   % number of measurements
URA_size = [36, 64, 256, 1024];
M = sqrt(URA_size); % antenna size, per side
Nmeas = [1e2 1e3 1e4 1e5];
% max_accumulation_err = zeros(length(Nmeas), length(URA_size), N_realizations);
est_err = zeros(URA_size(end), length(Nmeas), length(URA_size), N_realizations);

for jj=1:N_realizations
    rng(jj);
    path_ang = -45+90*rand(N,1);
    % ensure no wrapping around 2*pi (slides 28)
    rel_phase_adj_ant = exp(1j*pi*sin(pi*path_ang/180)); 
    for ii=1:length(Nmeas)
        % Per antenna, accumulating measurements into one complex number works 
        x = angle(mean(rel_phase_adj_ant(1:Nmeas(ii))));
        % assume the middle antenna as the reference antenna
        max_accumulation_err(ii, :, jj) = x*(2*(ceil(M/2)-1)); 
        
        for kk=1:length(URA_size)
            est_err(1:URA_size(kk), ii, kk, jj) = reshape(exp(1j*x*([0:M(kk)-1]-M(kk)/2)).*exp(1j*x*([0:M(kk)-1]-M(kk)/2).'), [], 1); 
        end
    end
end

fig = figure('Units','inches', 'Position', [1 1 16 4]);
plotdata = zeros(length(Nmeas), length(URA_size));
for kk=1:length(URA_size)
    tmp = rms(angle(est_err(1:URA_size(kk),:,kk,:)), 4);
end
bar();
for kk=1:length(URA_size)
    subplot(1,length(URA_size),kk)
    tmp = mean(abs(angle(est_err(1:URA_size(kk),:,kk,:))), 4);
    semilogx(Nmeas, median(tmp, 1)); hold on;
    semilogx(Nmeas, max(tmp, [], 1), '--'); hold on;
    xlabel("# measurements");
    ylabel("estimation error (rad)");
    legend(["median", "max"]);
    title("URA size "+string(URA_size(kk)));
end
% exportgraphics(fig,"~/Downloads/mmw-calibration-sim/figures/2.png",'Resolution',300);
%% test uniform distribution
ang = [-45:0.5:45];
steer = zeros(32, length(ang));
pa = get_phased_array(60.48e9);
steer = steervec(pa.getElementPosition()/(physconst('LightSpeed')/60.48e9), ...
        [ang;zeros(1,length(ang))]);

load("../mmw-calibration-sim/cal32_new_taoffice.mat"); % somhow this still works for node 1 mod 5
% PA.PHASE_CAL(PA.ACTIVE_ANT) = calibration_vec;
new_steer = steer./exp(1j.*calibration_vec.');
rng(4);
new_steer2 = steer./exp(1j.*2*pi*rand(32,1));
% new_steer4 = exp(1j.*2*pi*rand(32,1));

figure(1);
xlabel("ground truth angle");
subplot(131); tmp = abs(steer'*steer).'; imagesc(tmp./max(tmp)); colorbar;
subplot(132); tmp = abs(new_steer'*steer).'; imagesc(tmp./max(tmp)); colorbar;
subplot(133); tmp = abs(new_steer2'*steer).'; imagesc(tmp./max(tmp)); colorbar;

figure;plot(abs(new_steer2(:,162)'*steer))

n = [100:200:700];
our_cal = zeros(32, length(n));
for ii=1:length(n)
    load(sprintf("../mmw-calibration-sim/newcal_%d.mat", n(ii)) );
    our_cal(:, ii) = exp(1j.*cal_refant_26);
end
a1 = exp(1j.*calibration_vec.')./exp(1j*calibration_vec(26));
a2 = our_cal(:,4);
figure; plot(angle([a1./a2]))
idx = [10, 17, 27,28];
% idx = [3,4,20,24,29];
residual = a1(idx)./our_cal(idx, :);
figure; plot(n, abs(angle(residual.'))); legend("ant"+string(idx));
xticks(n);

%% strategy for selecting samples to approximate uniform distribution
load("../mmw-calibration-sim/cal32_new_taoffice.mat"); % somhow this still works for node 1 mod 5
gnd_truth = (exp(1j.*calibration_vec)./exp(1j*calibration_vec(26))).';
load("data2.mat");

rng('default') % For reproducibility
d = [];
base = 4000;
mu = 34; sigma = 10; r = random('Normal',mu,sigma,10*base, 1); d = [d; r];
% mu = 50; sigma = 6; r = random('Normal',mu,sigma,1000, 1); d = [d; r];
% mu = 40; sigma = 10; r = random('Uniform',-40,60,30000, 1); d = [d; r];
mu = -2; sigma = 5; r = random('Normal',mu,sigma,2*base, 1); d = [d; r];
mu = -21; sigma = 10; r = random('Normal',mu,sigma,4*base, 1); d = [d; r];
mu = 0; sigma = 10; r = random('Uniform',-45,45,5*base, 1); d = [d; r];
d = d(abs(d)<=40);
histogram(d);

pa = get_phased_array(60.48e9);
A = conj(steervec(pa.getElementPosition()/(physconst('LightSpeed')/60.48e9), ...
        [d.'; zeros(1, length(d))]));

tmp_data = [];
tmp_data.az = d;
tmp_data.el = zeros(length(d),1);
tmp_data.sv = A.*gnd_truth;

ang = [-70:1:70];
cand_idx = -999*ones(length(ang), 1000);
steer = steervec(pa.getElementPosition()/(physconst('LightSpeed')/60.48e9), [ang;zeros(1,length(ang))]);

v = tmp_data.sv'*steer; 
[M, I] = max(v, [], 2);
for ii=1:length(ang)
%     cands = find(I==ii);
    cands = find(d==ang(ii));
    m = min(length(cands), size(cand_idx, 2));
    cand_idx(ii, 1:m ) = cands(1:m);
end
% exclude = find(cand_idx(:,5)==-999);
% select = setdiff([1:length(ang)], exclude);
% assert(isempty(find(cand_idx(select,5)==-999)))
% new_idx = [reshape(cand_idx(select,1:5), [], 1)];

% figure; subplot(121); histogram(d, length(ang)); subplot(122); histogram(d(new_idx)); ang(exclude)
% exclude_origin = find(cand_idx(:,5)==-999);
[N,edges] = histcounts(d,length(ang));
[N2,edges2] = histcounts(ang(I),length(ang));

x = sum(ang(I)>=edges2(1:end-1).' & ang(I)<=edges2(2:end).' & (N2>5).', 1);
% [N3,edges3] = histcounts(d(find(x~=0)),edges2);
[N3,edges3] = histcounts(ang(I(find(x~=0))),edges2);


min_cnt = min(N2(N2>5));
y = ang(I);
new_idx = [];
for ii=1:length(N2)
    tmp = find(y>edges2(ii) & y<edges2(ii+1));
%     fprintf("%d, %d\n",ii,length(tmp));
    if length(tmp) >= min_cnt
        new_idx = [new_idx tmp(1:min_cnt)];
    end
end
% [N4,edges4] = histcounts(ang(I(new_idx)),edges2);
[N4,edges4] = histcounts(d(new_idx),edges2);
fprintf("average az angle %.2f %.2f\n", mean(d), mean(d(new_idx)));

figure; subplot(131); plot(edges(1:end-1), N); 
subplot(132); plot(edges2(1:end-1), N2);
subplot(133); plot(edges4(1:end-1), N4);

rng(0);
[res,  az_err, el_err] = helper(tmp_data, randperm(length(d)), A);
[res2,  az_err2, el_err2] = helper(tmp_data, new_idx(randperm(length(new_idx))), A);
% size(new_idx)
% figure; plot(abs(az_err)); hold on; plot(abs(az_err2));

figure; plot(rms(angle(res./gnd_truth), 1)); hold on;
plot(rms(angle(res2./gnd_truth), 1)); hold on;

data = [];
data.ang = d;
data.cal_vec1 = res(:, 1:50);
data.cal_vec2 = res2(:, 1:50);
data.gnd_truth = gnd_truth;
save("data3.mat", "data");
figure; 
subplot(121); 
histogram(data.ang); xlabel("Path angle (degree)"); ylabel("Count"); title("Unknown Distribution");
subplot(122);
plot([1:50]*100, rms(angle(data.cal_vec1./data.gnd_truth), 1)); hold on;
plot([1:50]*100, rms(angle(data.cal_vec2./data.gnd_truth), 1)); hold on;
xlim([0 5e3]); legend(["wo/ selection strategy", "w/ selection strategy"]);
xlabel("Number of measurements"); ylabel("RMS phase error (rad)");
% az_idx_set1 = [4 12 10 1 2 11 13 15 7 5 9 16 14 23 21 26 32 30 17 18 27 29 31 20 28 25];
% az_idx_set2 = [3 4  12 8 1 2  11 13 6 7 5 9  16 22 23 21 26 32 24 17 18 27 29 19 20 28];
% angle(mean(A(az_idx_set1,:)./A(az_idx_set2, :),2));
% figure; plot(angle(gnd_truth(az_idx_set1)./gnd_truth(az_idx_set2)))
%%

rng(4);
good_idx = find(abs(data2.el)<=5 & abs(data2.az)<=38); % size(good_idx)
new_idx = good_idx(randperm(length(good_idx))); %random_set;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ang = [-60:1:60];
steer = zeros(32, length(ang));
steer = steervec(pa.getElementPosition()/(physconst('LightSpeed')/60.48e9), [ang;zeros(1,length(ang))]);
tmp = abs(data2.sv(:,new_idx)'*steer );
[M, I] = max(tmp, [], 2);
% figure; plot([ang(I).' - data2.az(new_idx)]);
restricted_range = [-37:37];
tmp = -999*ones(length(restricted_range), 100);
for ii=1:length(restricted_range)
    a = restricted_range(ii);
    b = find(ang(I)==a);
%     b = find(data2.az(new_idx)==a);
    if ~isempty(b)
        tmp(ii, 1:length(b)) = new_idx(b);
    end
end
new_idx2 = [];
for ii=1:12
        working_idx = find(tmp(:,ii)~=-999);
        not_working_idx = setdiff([1:length(restricted_range)], working_idx);
        new_idx2 = [new_idx2; tmp(working_idx, ii); tmp(not_working_idx, 1)];
%     for jj=1:(length(restricted_range)+1)/2
%         ang1 = restricted_range(jj);
%         if jj==(length(restricted_range)+1)/2
%              new_idx2 = [new_idx2; tmp(jj,ii); ];
%         elseif tmp(jj,ii)~=-999 & tmp(end+1-jj,ii)~=-999 
%              new_idx2 = [new_idx2; tmp(jj,ii); tmp(end+1-jj,ii)];
%         end
%     end
end
% restricted_range(find(tmp(:,1)==-999))
[new_idx2(1:10) tmp(1:10,1)]
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
[res,  az_err, el_err] = helper(data2, new_idx,A);
[res2, az_err2, el_err2] = helper(data2, new_idx2,A);
rng(11); pp = randperm(1000);
[res3, az_err3, el_err3]  = helper(data2, pp(1:length(new_idx2)),A);

figure; 
plot(rms(angle(res./gnd_truth), 1)); hold on;
plot(rms(angle(res2./gnd_truth), 1)); hold on;
plot(rms(angle(res3./gnd_truth), 1)); hold on;

figure; 
plot(angle(gnd_truth./res3(:,end))); hold on; plot(angle(res3(:,end))); 

figure; 
% [3,4,20,24,29]
plot(abs(angle((res(:, :)./gnd_truth).')));

data2.az(new_idx(find(ang(I)==40) ))
find(abs(ang(I))<=40)
figure; histogram(ang(I))
% plot()